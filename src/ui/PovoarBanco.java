/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PovoarBanco.java
 *
 * Created on 27/09/2011, 17:36:18
 */
package ui;

import benchmark.Benchmark;
import fachada.FachadaDeConfiguracao;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import sgbd.SGBD;

/**
 *
 * @author pedroholanda
 */
public class PovoarBanco extends JInternalFrame {

    /** Creates new form PovoarBanco */
    public PovoarBanco() {
        initComponents();
    }
    
    public void setDiretorio (String diretorioArquivo){
        diretorio = diretorioArquivo;
        jScript.setText(diretorio);
    }
private SGBD sgbd;
private Benchmark benchmark;
private static String diretorio;
private FachadaDeConfiguracao fachadaDeConf = new FachadaDeConfiguracao();

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DadosAcesso = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSGBD = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jDatabase = new javax.swing.JTextField();
        jSenha = new javax.swing.JPasswordField();
        jPovoar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScript = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("dBest - Povoar Tabela");

        DadosAcesso.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Povoar Tabela", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setText("IP :");

        jIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIPActionPerformed(evt);
            }
        });

        jLabel2.setText("Usu√°rio :");

        jUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUsuarioActionPerformed(evt);
            }
        });

        jLabel3.setText("Senha :");

        jLabel4.setText("SGBD :");

        try {
            ArrayList<SGBD> tipos = fachadaDeConf.getAllSGBDs();
            List<String> nome = new ArrayList<String>();
            for(int i=0;i<tipos.size();i++){
                nome.add(i, tipos.get(i).getNome());
            }
            Object[ ] benchmarks = nome.toArray();
            DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
            jSGBD.setModel(model);
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }
        FachadaDeConfiguracao fachadaDeConf = new FachadaDeConfiguracao();
        try {
            ArrayList<SGBD> tipos = fachadaDeConf.getAllSGBDs();
            List<String> nome = new ArrayList<String>();
            for(int i=0;i<tipos.size();i++){
                nome.add(i, tipos.get(i).getNome());
            }
            Object[ ] benchmarks = nome.toArray();
            DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
            jSGBD.setModel(model);
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (jSGBD.getSelectedIndex() != -1) {
            FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
            int SGBD = 0;
            int j = 0;
            SGBD = jSGBD.getSelectedIndex() + 1;
            try {
                if(fachadaDeConfiguracao.getBenchmarksSGBD(SGBD).size()>0){
                    try {
                        ArrayList<Benchmark> tipos = fachadaDeConfiguracao.getBenchmarksSGBD(SGBD);

                        ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
                        List<String> nome = new ArrayList<String>();
                        for (int i = 0; i < tipos.size(); i++) {
                            for (int k = 0; k<tipos.get(i).getIdsDosSgbds().size();k++){
                                int idSGBD = tipos.get(i).getIdsDosSgbds().get(k);
                                if (idSGBD == SGBD) {
                                    nome.add(j, tipos.get(i).getNome());
                                    j++;
                                }

                            }

                        }
                        Object[] benchmarks = nome.toArray();
                        DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                        String usuarioDefault = sgbds.get(SGBD - 1).getUsuario();
                        String senhaDefault = sgbds.get(SGBD - 1).getSenha();
                        String ip = sgbds.get(SGBD - 1).getUrl();
                        jUsuario.setText(usuarioDefault);
                        jSenha.setText(senhaDefault);
                        jIP.setText("localhost");
                    } catch (IOException ex) {
                        Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else{
                    List<String> nome = new ArrayList<String>();
                    nome.add("");
                    Object[] benchmarks = nome.toArray();
                    DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                    jUsuario.setText("");
                    jSenha.setText("");
                    jIP.setText("");
                }
            } catch (IOException ex) {
                Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        jSGBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSGBDActionPerformed(evt);
            }
        });

        jLabel5.setText("Database:");

        jDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDatabaseActionPerformed(evt);
            }
        });

        jPovoar.setText("Povoar");
        jPovoar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPovoarActionPerformed(evt);
            }
        });

        jLabel6.setText("Arquivo de Script:");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout DadosAcessoLayout = new org.jdesktop.layout.GroupLayout(DadosAcesso);
        DadosAcesso.setLayout(DadosAcessoLayout);
        DadosAcessoLayout.setHorizontalGroup(
            DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(DadosAcessoLayout.createSequentialGroup()
                .addContainerGap()
                .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel6)
                    .add(jLabel4)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSGBD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(DadosAcessoLayout.createSequentialGroup()
                        .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jSenha)
                            .add(jUsuario)
                            .add(jIP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .add(jDatabase)
                            .add(jScript, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(4, 4, 4)
                        .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPovoar)
                            .add(jButton1))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DadosAcessoLayout.setVerticalGroup(
            DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(DadosAcessoLayout.createSequentialGroup()
                .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jSGBD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(DadosAcessoLayout.createSequentialGroup()
                        .add(jLabel1)
                        .add(23, 23, 23)
                        .add(jLabel2))
                    .add(DadosAcessoLayout.createSequentialGroup()
                        .add(jIP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jUsuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(28, 28, 28)
                .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jSenha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jDatabase, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(DadosAcessoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jScript, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .add(30, 30, 30)
                .add(jPovoar)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(DadosAcesso, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 439, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(DadosAcesso, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIPActionPerformed

}//GEN-LAST:event_jIPActionPerformed

private void jUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUsuarioActionPerformed

}//GEN-LAST:event_jUsuarioActionPerformed

private void jSGBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSGBDActionPerformed
    if (jSGBD.getSelectedIndex() != -1) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        int SGBD = 0;
        int j = 0;
        SGBD = jSGBD.getSelectedIndex() + 1;
        try {
            ArrayList<Benchmark> tipos = fachadaDeConfiguracao.getBenchmarksSGBD(SGBD);
            ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
            List<String> nome = new ArrayList<String>();
            for (int i = 0; i < tipos.size(); i++) {
                for (int k = 0; k<tipos.get(i).getIdsDosSgbds().size();k++){
                        int idSGBD = tipos.get(i).getIdsDosSgbds().get(k);
                if (idSGBD == SGBD) {
                    nome.add(j, tipos.get(i).getNome());
                    j++;
                }

                }
                
            }
            Object[] benchmarks = nome.toArray();
            DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
            String usuarioDefault = sgbds.get(SGBD - 1).getUsuario();
            String senhaDefault = sgbds.get(SGBD - 1).getSenha();
            sgbd = sgbds.get(SGBD - 1);
            System.out.println(j);
            jUsuario.setText(usuarioDefault);
            jSenha.setText(senhaDefault);
            jIP.setText("localhost");
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}//GEN-LAST:event_jSGBDActionPerformed

private void jDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDatabaseActionPerformed
        try {
            ArrayList<SGBD> tipos = fachadaDeConf.getAllSGBDs();
            List<String> nome = new ArrayList<String>();
            for(int i=0;i<tipos.size();i++){
                nome.add(i, tipos.get(i).getNome());
             }
            Object[ ] benchmarks = nome.toArray(); 
            DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks); 
            jSGBD.setModel(model);  
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }

if (jSGBD.getSelectedIndex() != -1) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        int SGBD = 0;
        int j = 0;
        SGBD = jSGBD.getSelectedIndex() + 1;
            try {
                if(fachadaDeConfiguracao.getBenchmarksSGBD(SGBD).size()>0){
                try {
                    ArrayList<Benchmark> tipos = fachadaDeConfiguracao.getBenchmarksSGBD(SGBD);
                    
                    ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
                    List<String> nome = new ArrayList<String>();
                    for (int i = 0; i < tipos.size(); i++) {
                        for (int k = 0; k<tipos.get(i).getIdsDosSgbds().size();k++){
                                int idSGBD = tipos.get(i).getIdsDosSgbds().get(k);
                        if (idSGBD == SGBD) {
                            nome.add(j, tipos.get(i).getNome());
                            j++;
                        }

                        }
                        
                    }
                    Object[] benchmarks = nome.toArray();
                    DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                    String usuarioDefault = sgbds.get(SGBD - 1).getUsuario();
                    String senhaDefault = sgbds.get(SGBD - 1).getSenha();
                    String ip = sgbds.get(SGBD - 1).getUrl();
                    jUsuario.setText(usuarioDefault);
                    jSenha.setText(senhaDefault);
                    jIP.setText("localhost");
                } catch (IOException ex) {
                    Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                else{
                    List<String> nome = new ArrayList<String>();
                    nome.add("");
                    Object[] benchmarks = nome.toArray();
                    DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                    jUsuario.setText("");
                    jSenha.setText("");
                    jIP.setText("");
                }
            } catch (IOException ex) {
                Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
            }

    }
}//GEN-LAST:event_jDatabaseActionPerformed

private void jPovoarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPovoarActionPerformed
    String ip;
    String usuario;
    String databaseExistente;
    String databaseDesejado;
    FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
    ip = jIP.getText();
    usuario = jUsuario.getText();
    String senha = new String(jSenha.getPassword());
    databaseExistente = jDatabase.getText();
        try {
            fachadaDeConfiguracao.povoarDadosTabela(sgbd, databaseExistente, ip, diretorio);
        } catch (SQLException ex) {
            Logger.getLogger(PovoarBanco.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PovoarBanco.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PovoarBanco.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PovoarBanco.class.getName()).log(Level.SEVERE, null, ex);
        }

    
}//GEN-LAST:event_jPovoarActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
PovoamentoBanco povoarBanco = new PovoamentoBanco();
povoarBanco.setPovoarBanco(this);
povoarBanco.setVisible(true);

}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PovoarBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PovoarBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PovoarBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PovoarBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PovoarBanco().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DadosAcesso;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jDatabase;
    private javax.swing.JTextField jIP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jPovoar;
    private javax.swing.JComboBox jSGBD;
    private javax.swing.JTextField jScript;
    private javax.swing.JPasswordField jSenha;
    private javax.swing.JTextField jUsuario;
    // End of variables declaration//GEN-END:variables
}
