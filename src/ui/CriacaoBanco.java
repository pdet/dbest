/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CriacaoBanco.java
 *
 * Created on Sep 9, 2011, 10:09:00 AM
 */
package ui;

import benchmark.Benchmark;
import fachada.FachadaDeConfiguracao;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import sgbd.SGBD;

/**
 *
 * @author Pedro Holanda
 */
public class CriacaoBanco extends JInternalFrame {

    /** Creates new form CriacaoBanco */
    public CriacaoBanco() {
        initComponents();
    }
private SGBD sgbd;
private Benchmark benchmark;
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DadosAcesso = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSGBD = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jDatabase = new javax.swing.JTextField();
        jSenha = new javax.swing.JPasswordField();
        jConectar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jDatabase1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jBenchmark = new javax.swing.JComboBox();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("dBest - Criar Banco");

        DadosAcesso.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Criação do Banco", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setText("IP :");

        jIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIPActionPerformed(evt);
            }
        });

        jLabel2.setText("Usuário :");

        jUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUsuarioActionPerformed(evt);
            }
        });

        jLabel3.setText("Senha :");

        jLabel4.setText("SGBD :");

        FachadaDeConfiguracao fachadaDeConf = new FachadaDeConfiguracao();
        try {
            ArrayList<SGBD> tipos = fachadaDeConf.getAllSGBDs();
            List<String> nome = new ArrayList<String>();
            for(int i=0;i<tipos.size();i++){
                nome.add(i, tipos.get(i).getNome());
            }
            Object[ ] benchmarks = nome.toArray();
            DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
            jSGBD.setModel(model);
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (jSGBD.getSelectedIndex() != -1) {
            FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
            int SGBD = 0;
            int j = 0;
            SGBD = jSGBD.getSelectedIndex() + 1;
            try {
                if(fachadaDeConfiguracao.getBenchmarksSGBD(SGBD).size()>0){
                    try {
                        ArrayList<Benchmark> tipos = fachadaDeConfiguracao.getBenchmarksSGBD(SGBD);

                        ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
                        List<String> nome = new ArrayList<String>();
                        for (int i = 0; i < tipos.size(); i++) {
                            for (int k = 0; k<tipos.get(i).getIdsDosSgbds().size();k++){
                                int idSGBD = tipos.get(i).getIdsDosSgbds().get(k);
                                if (idSGBD == SGBD) {
                                    nome.add(j, tipos.get(i).getNome());
                                    j++;
                                }

                            }

                        }
                        Object[] benchmarks = nome.toArray();
                        DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                        jBenchmark.setModel(model);
                        String usuarioDefault = sgbds.get(SGBD - 1).getUsuario();
                        String senhaDefault = sgbds.get(SGBD - 1).getSenha();
                        String ip = sgbds.get(SGBD - 1).getUrl();
                        String sgbd = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados().get(SGBD).toString();
                        String sgbdResultados = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados().get(SGBD).toString();
                        jUsuario.setText(usuarioDefault);
                        jSenha.setText(senhaDefault);
                        jIP.setText("localhost");
                    } catch (IOException ex) {
                        Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else{
                    List<String> nome = new ArrayList<String>();
                    nome.add("");
                    Object[] benchmarks = nome.toArray();
                    DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                    jBenchmark.setModel(model);
                    jUsuario.setText("");
                    jSenha.setText("");
                    jIP.setText("");
                }
            } catch (IOException ex) {
                Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        jSGBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSGBDActionPerformed(evt);
            }
        });

        jLabel5.setText("Database Existente :");

        jDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDatabaseActionPerformed(evt);
            }
        });

        jConectar.setText("Criar");
        jConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConectarActionPerformed(evt);
            }
        });

        jLabel6.setText("Nome do Database Desejado :");

        jDatabase1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDatabase1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Benchmark Desejado :");

        jBenchmark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBenchmarkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DadosAcessoLayout = new javax.swing.GroupLayout(DadosAcesso);
        DadosAcesso.setLayout(DadosAcessoLayout);
        DadosAcessoLayout.setHorizontalGroup(
            DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DadosAcessoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jConectar)
                    .addGroup(DadosAcessoLayout.createSequentialGroup()
                        .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(40, 40, 40)
                        .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDatabase, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSenha, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jIP, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(jSGBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBenchmark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDatabase1))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        DadosAcessoLayout.setVerticalGroup(
            DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DadosAcessoLayout.createSequentialGroup()
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSGBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DadosAcessoLayout.createSequentialGroup()
                        .addComponent(jIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DadosAcessoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jDatabase1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jBenchmark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jConectar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DadosAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DadosAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIPActionPerformed

}//GEN-LAST:event_jIPActionPerformed

private void jUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUsuarioActionPerformed

}//GEN-LAST:event_jUsuarioActionPerformed

private void jSGBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSGBDActionPerformed
    if (jSGBD.getSelectedIndex() != -1) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        int SGBD = 0;
        int j = 0;
        SGBD = jSGBD.getSelectedIndex() + 1;
        try {
            ArrayList<Benchmark> tipos = fachadaDeConfiguracao.getBenchmarksSGBD(SGBD);
            ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
            List<String> nome = new ArrayList<String>();
            for (int i = 0; i < tipos.size(); i++) {
                for (int k = 0; k<tipos.get(i).getIdsDosSgbds().size();k++){
                        int idSGBD = tipos.get(i).getIdsDosSgbds().get(k);
                if (idSGBD == SGBD) {
                    nome.add(j, tipos.get(i).getNome());
                    j++;
                }

                }
                
            }
            Object[] benchmarks = nome.toArray();
            DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
            jBenchmark.setModel(model);
            String usuarioDefault = sgbds.get(SGBD - 1).getUsuario();
            String senhaDefault = sgbds.get(SGBD - 1).getSenha();
            sgbd = sgbds.get(SGBD - 1);
            System.out.println(j);
            String sgbd = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados().get(SGBD).toString();
            String sgbdResultados = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados().get(SGBD).toString();
            jUsuario.setText(usuarioDefault);
            jSenha.setText(senhaDefault);
            jIP.setText("localhost");
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}//GEN-LAST:event_jSGBDActionPerformed

private void jDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDatabaseActionPerformed

}//GEN-LAST:event_jDatabaseActionPerformed

private void jConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConectarActionPerformed
    String ip;
    String usuario;
    String databaseExistente;
    String databaseDesejado;
    FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
    ip = jIP.getText();
    usuario = jUsuario.getText();
    String senha = new String(jSenha.getPassword());
    databaseExistente = jDatabase.getText();
    databaseDesejado = jDatabase1.getText();
    fachadaDeConfiguracao.atualizarDadosDoSGBDEscolhido(sgbd, usuario, senha);
    ArrayList<Benchmark> benchmarks;

        try {
            benchmarks = fachadaDeConfiguracao.getBenchmarksSGBD(jSGBD.getSelectedIndex() + 1);
            benchmark = benchmarks.get(jBenchmark.getSelectedIndex());
            fachadaDeConfiguracao.criarBancoDeDadosETabelas(sgbd, databaseDesejado, databaseExistente, ip, benchmark);

        } catch (SQLException ex) {
            Logger.getLogger(CriacaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CriacaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CriacaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }

    
}//GEN-LAST:event_jConectarActionPerformed

private void jDatabase1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDatabase1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jDatabase1ActionPerformed

private void jBenchmarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBenchmarkActionPerformed
    if (jBenchmark.getSelectedIndex() != 0) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        try {
            ArrayList<Benchmark> benchmarks = fachadaDeConfiguracao.getBenchmarksSGBD(jSGBD.getSelectedIndex() + 1);
            HashMap nomesBancos = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados();
            String sgbd = nomesBancos.get(jSGBD.getSelectedIndex()+1).toString();
            HashMap nomesBancosResultados = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados();
            String sgbdResultados = nomesBancosResultados.get(jSGBD.getSelectedIndex()+1).toString();

        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }


    }
    if (jBenchmark.getSelectedIndex() == 0) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        try {
            ArrayList<Benchmark> benchmarks = fachadaDeConfiguracao.getBenchmarksSGBD(jSGBD.getSelectedIndex() + 1);
            HashMap nomesBancos = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados();
            String sgbd = nomesBancos.get(jSGBD.getSelectedIndex()+1).toString();
            HashMap nomesBancosResultados = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados();
            String sgbdResultados = nomesBancosResultados.get(jSGBD.getSelectedIndex()+1).toString();
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }


    }
}//GEN-LAST:event_jBenchmarkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CriacaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CriacaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CriacaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriacaoBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CriacaoBanco().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DadosAcesso;
    private javax.swing.JComboBox jBenchmark;
    private javax.swing.JButton jConectar;
    private javax.swing.JTextField jDatabase;
    private javax.swing.JTextField jDatabase1;
    private javax.swing.JTextField jIP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox jSGBD;
    private javax.swing.JPasswordField jSenha;
    private javax.swing.JTextField jUsuario;
    // End of variables declaration//GEN-END:variables
}
