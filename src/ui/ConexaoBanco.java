/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConexaoBanco.java
 *
 * Created on 13/03/2011, 16:28:13
 */
package ui;

import benchmark.Benchmark;
import fachada.FachadaDeConfiguracao;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import sgbd.SGBD;
import ui.util.PesquisaConsultas;

/**
 *
 * @author Pedro Holanda
 */
public class ConexaoBanco extends JInternalFrame {

    private static SGBD sGBDF;
    private static Benchmark benchmarkF;
    private static String nomeBancoRF;
    private static String ipF;
    private static boolean conexaoFuncionou = false;
    

    @Override
    public void setTitle(String title) {
        super.setTitle(title);
        if (title == null){
            
        }
    }

    public SGBD getSGBD() {
        return sGBDF;
    }

    public String getNomeDoBancoResultados() {
        return nomeBancoRF;
    }

    public String getIP() {
        return ipF;
    }

    public Benchmark getBenchmark() {
        return benchmarkF;
    }

    public boolean bancoConectado(){
        return conexaoFuncionou;
    }
    /** Creates new form ConexaoBanco */
    public ConexaoBanco() {

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DadosAcesso = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jIP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSGBD = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jDatabase = new javax.swing.JTextField();
        jSenha = new javax.swing.JPasswordField();
        jConectar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jDatabaseResultados = new javax.swing.JTextField();
        jBenchmark = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("dBest - Conexão com o Banco de Dados");
        setName("Conexão com o banco"); // NOI18N

        DadosAcesso.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Conexão ao Banco", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setText("IP :");

        jIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIPActionPerformed(evt);
            }
        });

        jLabel2.setText("Usuário :");

        jUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUsuarioActionPerformed(evt);
            }
        });

        jLabel3.setText("Senha :");

        jLabel4.setText("SGBD :");

        FachadaDeConfiguracao fachadaDeConf = new FachadaDeConfiguracao();
        try {
            ArrayList<SGBD> tipos = fachadaDeConf.getAllSGBDs();
            List<String> nome = new ArrayList<String>();
            for(int i=0;i<tipos.size();i++){
                nome.add(i, tipos.get(i).getNome());
            }
            Object[ ] benchmarks = nome.toArray();
            DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
            jSGBD.setModel(model);
        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (jSGBD.getSelectedIndex() != -1) {
            FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
            int SGBD = 0;
            int j = 0;
            SGBD = jSGBD.getSelectedIndex() + 1;
            try {
                if(fachadaDeConfiguracao.getBenchmarksSGBD(SGBD).size()>0){
                    try {
                        ArrayList<Benchmark> tipos = fachadaDeConfiguracao.getBenchmarksSGBD(SGBD);

                        ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
                        List<String> nome = new ArrayList<String>();
                        for (int i = 0; i < tipos.size(); i++) {
                            for (int k = 0; k<tipos.get(i).getIdsDosSgbds().size();k++){
                                int idSGBD = tipos.get(i).getIdsDosSgbds().get(k);
                                if (idSGBD == SGBD) {
                                    nome.add(j, tipos.get(i).getNome());
                                    j++;
                                }

                            }

                        }
                        Object[] benchmarks = nome.toArray();
                        DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                        jBenchmark.setModel(model);
                        String usuarioDefault = sgbds.get(SGBD - 1).getUsuario();
                        String senhaDefault = sgbds.get(SGBD - 1).getSenha();
                        String ip = sgbds.get(SGBD - 1).getUrl();
                        String sgbd = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados().get(SGBD).toString();
                        String sgbdResultados = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados().get(SGBD).toString();
                        jDatabase.setText(sgbd);
                        jDatabaseResultados.setText(sgbdResultados);
                        jUsuario.setText(usuarioDefault);
                        jSenha.setText(senhaDefault);
                        jIP.setText("localhost");
                    } catch (IOException ex) {
                        Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else{
                    List<String> nome = new ArrayList<String>();
                    nome.add("");
                    Object[] benchmarks = nome.toArray();
                    DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                    jBenchmark.setModel(model);
                    jDatabase.setText("");
                    jDatabaseResultados.setText("");
                    jUsuario.setText("");
                    jSenha.setText("");
                    jIP.setText("");
                }
            } catch (IOException ex) {
                Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        jSGBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSGBDActionPerformed(evt);
            }
        });

        jLabel5.setText("Database :");

        jDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDatabaseActionPerformed(evt);
            }
        });

        jConectar.setText("Conectar");
        jConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConectarActionPerformed(evt);
            }
        });

        jLabel6.setText("Database Resultados :");

        jDatabaseResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDatabaseResultadosActionPerformed(evt);
            }
        });

        jBenchmark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBenchmarkActionPerformed(evt);
            }
        });

        jLabel7.setText("Benchmark :");

        javax.swing.GroupLayout DadosAcessoLayout = new javax.swing.GroupLayout(DadosAcesso);
        DadosAcesso.setLayout(DadosAcessoLayout);
        DadosAcessoLayout.setHorizontalGroup(
            DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DadosAcessoLayout.createSequentialGroup()
                .addContainerGap(270, Short.MAX_VALUE)
                .addComponent(jConectar)
                .addContainerGap())
            .addGroup(DadosAcessoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addGroup(DadosAcessoLayout.createSequentialGroup()
                        .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel4))
                        .addGap(76, 76, 76)
                        .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jDatabaseResultados, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDatabase, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSenha, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jIP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(jBenchmark, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSGBD, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DadosAcessoLayout.setVerticalGroup(
            DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DadosAcessoLayout.createSequentialGroup()
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSGBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(12, 12, 12)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jBenchmark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DadosAcessoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2))
                    .addGroup(DadosAcessoLayout.createSequentialGroup()
                        .addComponent(jIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DadosAcessoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jDatabaseResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jConectar)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DadosAcesso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DadosAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DadosAcesso.getAccessibleContext().setAccessibleName("oi");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIPActionPerformed
}//GEN-LAST:event_jIPActionPerformed

    private void jUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUsuarioActionPerformed
}//GEN-LAST:event_jUsuarioActionPerformed

    private void jDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDatabaseActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jDatabaseActionPerformed

    private void jConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConectarActionPerformed

        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        String senha = new String(jSenha.getPassword());
        PesquisaConsultas pesquisaC = new PesquisaConsultas();
        try {
            ArrayList<Benchmark> benchmarks = fachadaDeConfiguracao.getBenchmarksSGBD(jSGBD.getSelectedIndex() + 1);
            ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
            fachadaDeConfiguracao.atualizarDadosDoSGBDEscolhido(sgbds.get(jSGBD.getSelectedIndex()), jUsuario.getText(), senha);
            fachadaDeConfiguracao.atualizarDadosDoBenchmarkEscolhido(benchmarks.get(jBenchmark.getSelectedIndex()),jSGBD.getSelectedIndex()+1, jDatabase.getText(), jDatabaseResultados.getText());        
            sGBDF = sgbds.get(jSGBD.getSelectedIndex());
            benchmarkF = benchmarks.get(jBenchmark.getSelectedIndex());
            ipF = jIP.getText();
            nomeBancoRF = jDatabaseResultados.getText();
            fachadaDeConfiguracao.configurarBenchmarkEscolhido(benchmarkF,jSGBD.getSelectedIndex()+1);
           conexaoFuncionou = true;
        pesquisaC.setBanco(sGBDF);
        pesquisaC.setIP(ipF);
        pesquisaC.setNomeBancoResultados(nomeBancoRF);
        this.setVisible(false);
        conexaoFuncionou = true;

        } catch (IOException ex) {
            

            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jConectarActionPerformed

    private void jDatabaseResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDatabaseResultadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDatabaseResultadosActionPerformed

private void jBenchmarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBenchmarkActionPerformed
    if (jBenchmark.getSelectedIndex() != 0) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        try {
            ArrayList<Benchmark> benchmarks = fachadaDeConfiguracao.getBenchmarksSGBD(jSGBD.getSelectedIndex() + 1);
            HashMap nomesBancos = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados();
            String sgbd = nomesBancos.get(jSGBD.getSelectedIndex()+1).toString();
            HashMap nomesBancosResultados = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados();
            String sgbdResultados = nomesBancosResultados.get(jSGBD.getSelectedIndex()+1).toString();
            jDatabase.setText(sgbd);
            jDatabaseResultados.setText(sgbdResultados);

        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }


    }
    if (jBenchmark.getSelectedIndex() == 0) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        try {
            ArrayList<Benchmark> benchmarks = fachadaDeConfiguracao.getBenchmarksSGBD(jSGBD.getSelectedIndex() + 1);
            HashMap nomesBancos = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados();
            String sgbd = nomesBancos.get(jSGBD.getSelectedIndex()+1).toString();
            HashMap nomesBancosResultados = benchmarks.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados();
            String sgbdResultados = nomesBancosResultados.get(jSGBD.getSelectedIndex()+1).toString();
            jDatabase.setText(sgbd);
            jDatabaseResultados.setText(sgbdResultados);

        } catch (IOException ex) {
            Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
        }


    }
}//GEN-LAST:event_jBenchmarkActionPerformed

private void jSGBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSGBDActionPerformed
    if (jSGBD.getSelectedIndex() != -1) {
        FachadaDeConfiguracao fachadaDeConfiguracao = new FachadaDeConfiguracao();
        int SGBD = 0;
        int j = 0;
        SGBD = jSGBD.getSelectedIndex() + 1;
            try {
                if(fachadaDeConfiguracao.getBenchmarksSGBD(SGBD).size()>0){
                try {
                    ArrayList<Benchmark> tipos = fachadaDeConfiguracao.getBenchmarksSGBD(SGBD);
                    
                    ArrayList<SGBD> sgbds = fachadaDeConfiguracao.getAllSGBDs();
                    List<String> nome = new ArrayList<String>();
                    for (int i = 0; i < tipos.size(); i++) {
                        for (int k = 0; k<tipos.get(i).getIdsDosSgbds().size();k++){
                                int idSGBD = tipos.get(i).getIdsDosSgbds().get(k);
                        if (idSGBD == SGBD) {
                            nome.add(j, tipos.get(i).getNome());
                            j++;
                        }

                        }
                        
                    }
                    Object[] benchmarks = nome.toArray();
                    DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                    jBenchmark.setModel(model);
                    String usuarioDefault = sgbds.get(SGBD - 1).getUsuario();
                    String senhaDefault = sgbds.get(SGBD - 1).getSenha();
                    String ip = sgbds.get(SGBD - 1).getUrl();
                    String sgbd = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDados().get(SGBD).toString();
                    String sgbdResultados = tipos.get(jBenchmark.getSelectedIndex()).getNomesDosBancosDeDadosParaArmazenarResultados().get(SGBD).toString();
                    jDatabase.setText(sgbd);
                    jDatabaseResultados.setText(sgbdResultados);
                    jUsuario.setText(usuarioDefault);
                    jSenha.setText(senhaDefault);
                    jIP.setText("localhost");
                } catch (IOException ex) {
                    Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                else{
                    List<String> nome = new ArrayList<String>();
                    nome.add("");
                    Object[] benchmarks = nome.toArray();
                    DefaultComboBoxModel model = new DefaultComboBoxModel(benchmarks);
                    jBenchmark.setModel(model);
                    jDatabase.setText("");
                    jDatabaseResultados.setText("");
                    jUsuario.setText("");
                    jSenha.setText("");
                    jIP.setText("");
                }
            } catch (IOException ex) {
                Logger.getLogger(ConexaoBanco.class.getName()).log(Level.SEVERE, null, ex);
            }

    }
}//GEN-LAST:event_jSGBDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {

                new ConexaoBanco().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DadosAcesso;
    private javax.swing.JComboBox jBenchmark;
    private javax.swing.JButton jConectar;
    private javax.swing.JTextField jDatabase;
    private javax.swing.JTextField jDatabaseResultados;
    private javax.swing.JTextField jIP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox jSGBD;
    private javax.swing.JPasswordField jSenha;
    private javax.swing.JTextField jUsuario;
    // End of variables declaration//GEN-END:variables
}
