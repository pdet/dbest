/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AcompanhamentoTestes.java
 *
 * Created on 02/10/2011, 17:40:15
 */
package ui;

import benchmark.Benchmark;
import consulta.Consulta;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import ui.util.GraficoBarras;
import ui.util.GraficoPizza;
/**
 *
 * @author pedroholanda
 */
public class AcompanhamentoTestes extends JInternalFrame {

    /** Creates new form AcompanhamentoTestes */
    public AcompanhamentoTestes() {
        initComponents();
    }
    
    ConexaoBanco banco = new ConexaoBanco();
    Benchmark bench = banco.getBenchmark();
    private ArrayList consultas = bench.getConsultas();
    private int iteracaoExecucao = 1;
    private static List dados = new ArrayList();


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
        public List getDados() {
        return dados;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jConsultasExecutadas = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jIteracoesTerminadas = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jConsultasFaltando = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jRodadas2 = new javax.swing.JTextField();
        jRodadas1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTipo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jOrdem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBenchmark = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jBarra = new javax.swing.JButton();
        jPizza = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jItTempo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("dBest - Acompanhamento de Testes");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Teste", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jConsultasExecutadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Iteração", "Consultas Executadas", "Tempo de Resposta", "SQL"
            }
        ));
        jConsultasExecutadas.setToolTipText("oi");
        jScrollPane2.setViewportView(jConsultasExecutadas);
        jConsultasExecutadas.getColumnModel().getColumn(0).setResizable(false);

        jIteracoesTerminadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Iteração", "Duração (Segundos)"
            }
        ));
        jScrollPane4.setViewportView(jIteracoesTerminadas);

        jConsultasFaltando.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "SQL"
            }
        ));
        this.preencherJConsultasfaltando();
        jScrollPane3.setViewportView(jConsultasFaltando);

        jLabel4.setText("Tempo Decorrido:");

        jRodadas2.setEditable(false);

        jRodadas1.setText("1");
        jRodadas1.setEditable(false);

        jLabel3.setText("Iteração em Execução:");

        jLabel1.setText("Tipo de Teste");

        jTipo.setEditable(false);

        jLabel5.setText("Ordem do Teste:");

        jOrdem.setEditable(false);

        jLabel2.setText("Benchmark:");

        jBenchmark.setEditable(false);
        jBenchmark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBenchmarkActionPerformed(evt);
            }
        });

        jLabel6.setText("Consultas Executadas");

        jLabel7.setText("Iteracões Concluidas");

        jLabel8.setText("Consultas a Executar");

        jBarra.setText("Barra");
        jBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBarraActionPerformed(evt);
            }
        });

        jPizza.setText("Pizza");
        jPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPizzaActionPerformed(evt);
            }
        });

        jButton3.setText("Parar Teste");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Número Total de Iterações:");

        jItTempo.setEditable(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(jLabel6)
                            .add(152, 152, 152))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane3, 0, 0, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(119, 119, 119)
                        .add(jLabel8)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(85, 85, 85)
                                .add(jLabel7))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(71, 71, 71)
                                .add(jPizza, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jBarra, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton3)))
                        .add(55, 55, 55))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 364, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel5)
                                    .add(jLabel1)
                                    .add(jLabel3)
                                    .add(jLabel4)
                                    .add(jLabel2)
                                    .add(jLabel9))
                                .add(68, 68, 68)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jItTempo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .add(jRodadas2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .add(jRodadas1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .add(jTipo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .add(jOrdem, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .add(jBenchmark, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))))
                        .add(54, 54, 54))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jLabel7))
                .add(4, 4, 4)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane4, 0, 0, Short.MAX_VALUE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jLabel8)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jBenchmark, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(14, 14, 14)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jTipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(jOrdem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(jRodadas1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(jRodadas2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 23, Short.MAX_VALUE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(jItTempo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(4, 4, 4)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)))
                .add(20, 20, 20)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton3)
                    .add(jBarra)
                    .add(jPizza))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 824, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 790, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 613, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jBenchmarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBenchmarkActionPerformed

}//GEN-LAST:event_jBenchmarkActionPerformed

private void jBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBarraActionPerformed
     String nomeConsulta;
     double duracaoConsulta;

    DefaultTableModel modelo = (DefaultTableModel) jConsultasExecutadas.getModel();
    dados.clear();
    int iteracao = 1;
    int j = 0;
    for (int i = 0; i < modelo.getRowCount(); i++) {
        nomeConsulta = modelo.getValueAt(i, 1).toString();
        duracaoConsulta = Double.parseDouble(modelo.getValueAt(i, 2).toString());
        dados.add(nomeConsulta);
        dados.add(duracaoConsulta);
        j = i + 1;
        if (i%consultas.size() == 0 && i != 0){
            iteracao = iteracao +1;
        }
        
        dados.add(iteracao);
        System.out.print(dados.get(0));
    }
    GraficoBarras chart = null;
        try {
            chart = new GraficoBarras();
            chart.setDados(dados);
            chart.setGraficoBarras();
        } catch (IOException ex) {
            Logger.getLogger(AcompanhamentoTestes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AcompanhamentoTestes.class.getName()).log(Level.SEVERE, null, ex);
        }
        chart.pack();
        chart.setVisible(true);
        JFreeChart c = ChartFactory.createBarChart("dBest - Análise Comparativa das Consultas (Barra)", null, null, null, PlotOrientation.HORIZONTAL, true, true, true);
}//GEN-LAST:event_jBarraActionPerformed

private void jPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPizzaActionPerformed
    double duracaoConsulta;
    GraficoPizza j = new GraficoPizza();
    j.setTitle("dBest - Duração Média das Consultas");
    j.setSize(640, 430);
    String nomeConsulta;

    DefaultTableModel modelo = (DefaultTableModel) jConsultasExecutadas.getModel();
    for (int i = 0; i < modelo.getRowCount(); i++) {
        nomeConsulta = modelo.getValueAt(i, 1).toString();
        duracaoConsulta = Double.parseDouble(modelo.getValueAt(i, 2).toString());
        j.setValue(nomeConsulta, duracaoConsulta);
    }



    j.setChar("dBest - Duração Média das Consultas");
    j.Show();
}//GEN-LAST:event_jPizzaActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
setVisible(false);
}//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AcompanhamentoTestes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AcompanhamentoTestes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AcompanhamentoTestes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AcompanhamentoTestes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new AcompanhamentoTestes().setVisible(true);
            }
        });
    }
    
    
        public void atualizarJConsultasExecutando(String idConsul, String duracaoConsulta, String numInteracao) {
        int idConsulta = Integer.parseInt(idConsul);
        DefaultTableModel modelo = (DefaultTableModel) jConsultasExecutadas.getModel();
        Consulta consulta = (Consulta) consultas.get(idConsulta - 1);

        modelo.addRow(new Object[]{iteracaoExecucao,idConsulta, duracaoConsulta, consulta.getTextoConsulta()});
        this.atulizarJConsultasFaltando(idConsulta);
        
    }

    public void atulizarJConsultasFaltando(int id) {
        int j;
        DefaultTableModel modelo = (DefaultTableModel) jConsultasFaltando.getModel();
        for (j = 0; j < modelo.getRowCount(); j++) {
            if (Integer.parseInt(modelo.getValueAt(j, 0).toString()) == id) {
                modelo.removeRow(j);
            }
        }

    }

    public void atualizarJIteracoes() {
        DefaultTableModel modelo_2 = (DefaultTableModel) jIteracoesTerminadas.getModel();
        DefaultTableModel modelo = (DefaultTableModel) jConsultasExecutadas.getModel();
        double tempoIteracaoMilisegundos = 0;
        int tempoIteracaoSegundos;
        for (int i = consultas.size() * (iteracaoExecucao-1); i < consultas.size()*iteracaoExecucao;i++){
            tempoIteracaoMilisegundos = tempoIteracaoMilisegundos + Double.parseDouble(modelo.getValueAt(i, 2).toString());
        }
        tempoIteracaoSegundos = (int) (tempoIteracaoMilisegundos/1000);
        if(iteracaoExecucao == 1){            
        modelo_2.addRow(new Object[]{iteracaoExecucao, tempoIteracaoSegundos});
        iteracaoExecucao++;
        jRodadas1.setText(Integer.toString(iteracaoExecucao));
        }
        else {
        modelo_2.addRow(new Object[]{iteracaoExecucao, tempoIteracaoSegundos});
        iteracaoExecucao++;
        jRodadas1.setText(Integer.toString(iteracaoExecucao));
        }

    }
    
    public void testeTerminouTempo(String duracaoConsulta){
        DefaultTableModel modelo1 = (DefaultTableModel) jConsultasExecutadas.getModel();
        DefaultTableModel modelo = (DefaultTableModel) jConsultasFaltando.getModel();
        int idConsulta = Integer.parseInt(modelo.getValueAt(0, 0).toString());
        Consulta consulta = (Consulta) consultas.get(idConsulta - 1);
        modelo1.addRow(new Object[]{iteracaoExecucao,idConsulta, duracaoConsulta, consulta.getTextoConsulta()});
        jRodadas1.setText("Terminou");
        modelo.setNumRows(0);
    }



    public void testeTerminou(String duracaoConsulta) {
        DefaultTableModel modelo1 = (DefaultTableModel) jConsultasExecutadas.getModel();
        DefaultTableModel modelo = (DefaultTableModel) jConsultasFaltando.getModel();
        int idConsulta = Integer.parseInt(modelo.getValueAt(0, 0).toString());
        Consulta consulta = (Consulta) consultas.get(idConsulta - 1);
        modelo1.addRow(new Object[]{iteracaoExecucao,idConsulta, duracaoConsulta, consulta.getTextoConsulta()});
        atualizarJIteracoes();
        jRodadas1.setText("Terminou");
        modelo.setNumRows(0);
    }

    public void preencherJConsultasfaltando() {
        DefaultTableModel modelo = (DefaultTableModel) jConsultasFaltando.getModel();
        Consulta consulta = (Consulta) consultas.get(0);
        for (int i = 0; i < consultas.size(); i++) {
            consulta = (Consulta) consultas.get(i);
            modelo.addRow(new Object[]{consulta.getId(), consulta.getTextoConsulta()});
        }
    }

    public void setDadosTeste(String benchmark, String tipo, String ordem, String durIntTotal) {
        jBenchmark.setText(benchmark);
        jTipo.setText(tipo);
        jOrdem.setText(ordem);
        if (tipo.equals("Tempo")){
            jLabel9.setText("Tempo Total:");
            jItTempo.setText(durIntTotal +" minutos.");
        }
        else{
            jItTempo.setText(durIntTotal);
        }
    }

    public void setTempoDecorrido(int hora, int min, int seg) {
        String tempoD = Integer.toString(hora) + ":" + Integer.toString(min) + ":" + Integer.toString(seg);
        jRodadas2.setText(tempoD);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBarra;
    private javax.swing.JTextField jBenchmark;
    private javax.swing.JButton jButton3;
    private static javax.swing.JTable jConsultasExecutadas;
    private javax.swing.JTable jConsultasFaltando;
    private javax.swing.JTextField jItTempo;
    private javax.swing.JTable jIteracoesTerminadas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jOrdem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jPizza;
    private javax.swing.JTextField jRodadas1;
    private javax.swing.JTextField jRodadas2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTipo;
    // End of variables declaration//GEN-END:variables
}
